{"version":3,"sources":["redux/dialogsReducer.js","selectors/friendsSelectors.js","utils/helpers/objectsHelpers.js","redux/usersReducer.js","assets/img/preloader.svg","components/common/Preloader/Preloader.module.css","components/NavbarFriends/Friend/Friend.module.css","components/NavbarMusic/NavbarMusic.module.css","api/api.js","components/Navbar/Navbar.module.css","redux/imgReducer.js","serviceWorker.js","redux/appReducer.js","redux/reduxStore.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/NavbarFriends/Friend/Friend.jsx","components/NavbarFriends/NavbarFriends.jsx","components/NavbarFriends/NavbarFriendsContainer.jsx","components/NavbarMusic/NavbarMusic.jsx","components/Footer/Footer.jsx","App.js","index.js","components/Header/Header.module.css","redux/authReducer.js","selectors/authSelectors.js","components/NavbarFriends/NavbarFriends.module.css","components/common/Preloader/Preloader.jsx","redux/friendsReducer.js","components/Footer/Footer.module.css","redux/profileReducer.js","selectors/profileSelectors.js"],"names":["initialState","dialogs","id","name","imgSrc","avatarImage","getAvatarImage","messages","message","dialogsReducer","state","action","type","length","newMessageBody","addMessage","getFriends","friendsPage","friends","updObjInArrFollowUnfollow","items","itemId","objectPropName","newObjectProps","map","i","FOLLOW","UNFOLLOW","SET_USERS","SET_CURR_PAGE","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","userId","followed","count","filter","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowInProgress","getUsers","dispatch","a","usersAPI","data","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","followUser","bind","unfollow","unfollowUser","module","exports","instance","axios","withCredentials","baseURL","headers","get","then","response","idUser","delete","post","profileAPI","getProfileUser","getStatusUser","updateStatusUser","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","getMe","getPhotoAuthUser","photos","small","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","_image","img","src","value","this","Boolean","window","location","hostname","match","init","isAuth","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","friendsReducer","usersPage","auth","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunkMiddleware","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","smallAvatar","orangeAvatar","getContrastText","deepOrange","StyledBadge","withStyles","badge","boxShadow","top","left","animation","border","content","transform","opacity","Badge","Header","props","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","className","styles","noneHref","renderMobileMenu","IconButton","aria-label","badgeContent","aria-controls","aria-haspopup","header","AppBar","Toolbar","Typography","variant","noWrap","href","logoText","InputBase","placeholder","root","input","inputProps","edge","loginName","photo","Avatar","overlap","alt","component","Button","connect","getIsAuth","getLogin","getUserId","getProfile","getPhoto","Navbar","nav","item","to","activeClassName","activeLink","fontSize","Friend","friend","NavbarFriends","friendsElement","f","key","navfriends","quantityFriends","navfriendsGrid","NavbarMusic","Footer","footer","logo","DialogsContainer","lazy","News","Settings","Music","UsersContainer","ProfileContainer","LoginContainer","FriendsContainer","withRouter","initApp","promise","getAuthUserData","Promise","all","useEffect","NavbarFriendsContainer","fallback","Preloader","exact","path","render","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","GET_PHOTO","captchaUrl","payload","setAuthUserData","getCaptchaUrlSuccess","responsePhoto","authUser","error_message","stopSubmit","_error","url","preloader","surname","country","city","ADD_POST","SET_USER_STATUS","SET_LIKE_POST","UNSET_LIKE_POST","DEL_POST","posts","countLike","countDislike","setLike","setDislike","newPostBody","p","postId","addPost","deletePost","setUserStatus","setLikePost","setDislikePost","unsetLikePost","unsetDislikePost","getUserProfile","getUserStatus","updateUserStatus","file","getState","getAvatar","getStatus","getPosts"],"mappings":"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","file":"static/js/main.6fb9e5ee.chunk.js","sourcesContent":["import avatarImage from './imgReducer';\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Дмитрий', imgSrc: avatarImage.getAvatarImage(0) },\r\n        { id: 2, name: 'Светлана', imgSrc: avatarImage.getAvatarImage(1) },\r\n        { id: 3, name: 'Женя', imgSrc: avatarImage.getAvatarImage(3) },\r\n        { id: 4, name: 'Андрей', imgSrc: avatarImage.getAvatarImage(4) },\r\n        { id: 5, name: 'Александр', imgSrc: avatarImage.getAvatarImage(2) },\r\n        { id: 6, name: 'Мария', imgSrc: avatarImage.getAvatarImage(1) },\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Привет!' },\r\n        { id: 2, message: 'Как дела?' },\r\n        { id: 3, message: 'Чем занимаешься?' },\r\n    ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            //глубокое копирование объекта\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: (state.messages.length) + 1, message: action.newMessageBody }]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessage = (newMessageBody) => ({ type: ADD_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer;","//import { createSelector } from \"reselect\";\r\n\r\nexport const getFriends = (state) => {\r\n    return state.friendsPage.friends;\r\n}","export const updObjInArrFollowUnfollow = (items, itemId, objectPropName, newObjectProps) => {\r\n    return items.map(i => {\r\n        if (i[objectPropName] === itemId) {\r\n            return { ...i, ...newObjectProps}\r\n        }\r\n        return i;\r\n    })\r\n}","import { usersAPI } from './../api/api';\r\nimport { updObjInArrFollowUnfollow } from '../utils/helpers/objectsHelpers';\r\n\r\nconst FOLLOW = 'antiVK/users/FOLLOW';\r\nconst UNFOLLOW = 'antiVK/users/UNFOLLOW';\r\nconst SET_USERS = 'antiVK/users/SET_USERS';\r\nconst SET_CURR_PAGE = 'antiVK/users/SET_CURR_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'antiVK/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'antiVK/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'antiVK/users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n//список пользователей соц сети и вся инфа о них. Берется из сервера\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                //было\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: true }\r\n                //     }\r\n                //     return u;\r\n                // })\r\n                users: updObjInArrFollowUnfollow(state.users, action.userId, \"id\", { followed: true })\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updObjInArrFollowUnfollow(state.users, action.userId, \"id\", { followed: false })\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURR_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//actionCreators\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\n\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\n\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURR_PAGE, currentPage });\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\r\n\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleIsFollowInProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n//thunk делает кучу асинхронных запросов и диспатч\r\nexport const getUsers = (currentPage, pageSize) => { //thunk-creator\r\n    return async (dispatch) => { //thunk\r\n        dispatch(toggleIsFetching(true)); //отображение крутилки загрузки\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false)); //отключить крутилку загрузки\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\n//функция для thunk-creator'a follow and unfollow\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowInProgress(true, userId));\r\n    let data = await apiMethod(userId);\r\n    if (data.resultCode === 0) dispatch(actionCreator(userId));\r\n    dispatch(toggleIsFollowInProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(userId), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(userId), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.52d81aac.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2HO6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navfriends\":\"Friend_navfriends__352Vk\",\"navfriendsGrid\":\"Friend_navfriendsGrid__2C55u\",\"friend\":\"Friend_friend__2zs29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavbarMusic\":\"NavbarMusic_NavbarMusic__3jfXr\"};","import * as axios from 'axios';\r\n//Data Access Layer\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"b19640f8-e1c6-4c7e-b9f4-4fc65e7a380e\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    //функция запроса с сервера пользователей, где страница = 1, currentPage указывается в usersReducer\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(\"users?page=\" + currentPage + \"&count=\" + pageSize)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    //функция отписки onfollow\r\n    unfollowUser(idUser) {\r\n        return instance.delete(\"follow/\" + idUser)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    //функция подписки follow\r\n    followUser(idUser) {\r\n        return instance.post(\"follow/\" + idUser)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    //функция запроса с сервера профиля пользователя\r\n    getProfileUser(idUser) {\r\n        if (idUser) {\r\n            return instance.get(\"profile/\" + idUser)\r\n                .then(response => {\r\n                    return response.data;\r\n                });\r\n        }\r\n    },\r\n    //функция запроса с сервера статуса пользователя\r\n    getStatusUser(idUser) {\r\n        if (idUser) {\r\n            return instance.get(\"profile/status/\" + idUser)\r\n                .then(response => {\r\n                    return response.data;\r\n                });\r\n        }\r\n    },\r\n    //функция обновления статуса пользователя\r\n    updateStatusUser(status) {\r\n        return instance.put(\"profile/status\", { status: status });\r\n    },\r\n    //функция загрузки фото на аватарку пользователя\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(\"profile/photo\", formData, {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    //функция обновления профиля пользователя\r\n    saveProfile(profile) {\r\n        return instance.put(\"profile\", profile);\r\n    },\r\n};\r\n\r\nexport const authAPI = {\r\n    //функция запроса логина с сервера\r\n    getMe() {\r\n        return instance.get(\"auth/me\");\r\n    },\r\n    //функция получения аватарки залогиненного пользователя\r\n    getPhotoAuthUser(idUser) {\r\n        return instance.get(\"profile/\" + idUser)\r\n            .then(response => {\r\n                return response.data.photos.small;\r\n            });\r\n    },\r\n    //функция авторизации пользователя\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(\"auth/login\", { email, password, rememberMe, captcha })\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    logout() {\r\n        return instance.delete(\"auth/login\");\r\n    },\r\n};\r\n\r\nexport const securityAPI = {\r\n    //функция запроса каптчи с сервера\r\n    getCaptchaUrl() {\r\n        return instance.get(\"security/get-captcha-url\");\r\n    },\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Udoi\",\"item\":\"Navbar_item__1IIwC\",\"activeLink\":\"Navbar_activeLink__4pqbA\"};","let avatarImage = {\r\n    _image: {\r\n        img: [\r\n            { id: 1, src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSFD1Ofi7-DsfgVE7CojIqMuNGYEN1N4dGyec3hJQebtISancyF' },\r\n            { id: 2, src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTY8JBBDJ15r08pjcZ81aWOEgFGPKLV-yXEz_9LxMk7Dn_-SYOg' },\r\n            { id: 3, src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRPg3XBAD7Y_OBK42lSSsE6EmstHQFwDhos9-_U7qalNs8azhSk' },\r\n            { id: 4, src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQKs6g39CeptLQsVJ2m_w7Ib6RsPCuJuUsUsMq9aafQGVB9hhsg' },\r\n            { id: 5, src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTmHvlQey7sRB-lIKvwZQHlY-Gwi0TIDWloz6LZcCYwdubZ5-nV' },\r\n        ]\r\n    },\r\n    getAvatarImage(value) {\r\n        return this._image.img[value].src;\r\n    },\r\n};\r\n\r\nexport default avatarImage;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { getAuthUserData } from './authReducer';\r\n\r\nconst SET_INIT = 'SET_INIT';\r\n\r\nlet initialState = {\r\n    init: false,\r\n    isAuth: false\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INIT: {\r\n            return {\r\n                ...state,\r\n                init: true,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initSuccess = () => ({ type: SET_INIT });\r\n\r\n//react-thunk\r\nexport const initApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { profileReducer } from \"./profileReducer\";\r\nimport { dialogsReducer } from \"./dialogsReducer\";\r\nimport { friendsReducer } from \"./friendsReducer\";\r\nimport { usersReducer } from './usersReducer';\r\nimport { authReducer } from './authReducer';\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    friendsPage: friendsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\n//подключение расширения Redux для Google Chrome\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));","import React from 'react';\r\nimport { fade, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n//import MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport styles from './Header.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n//import { Icon } from '@material-ui/core';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tgrow: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tdisplay: 'none',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tdisplay: 'block',\r\n\t\t},\r\n\t},\r\n\tsearch: {\r\n\t\tposition: 'relative',\r\n\t\tborderRadius: theme.shape.borderRadius,\r\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25),\r\n\t\t},\r\n\t\tmarginRight: theme.spacing(2),\r\n\t\tmarginLeft: 0,\r\n\t\twidth: '100%',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tmarginLeft: theme.spacing(3),\r\n\t\t\twidth: 'auto',\r\n\t\t},\r\n\t},\r\n\tsearchIcon: {\r\n\t\tpadding: theme.spacing(0, 2),\r\n\t\theight: '100%',\r\n\t\tposition: 'absolute',\r\n\t\tpointerEvents: 'none',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\tinputRoot: {\r\n\t\tcolor: 'inherit',\r\n\t},\r\n\tinputInput: {\r\n\t\tpadding: theme.spacing(1, 1, 1, 0),\r\n\t\t// vertical padding + font size from searchIcon\r\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n\t\ttransition: theme.transitions.create('width'),\r\n\t\twidth: '100%',\r\n\t\t[theme.breakpoints.up('md')]: {\r\n\t\t\twidth: '20ch',\r\n\t\t},\r\n\t},\r\n\tsectionDesktop: {\r\n\t\tdisplay: 'none',\r\n\t\t[theme.breakpoints.up('md')]: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t},\r\n\t},\r\n\tsectionMobile: {\r\n\t\tdisplay: 'flex',\r\n\t\t[theme.breakpoints.up('md')]: {\r\n\t\t\tdisplay: 'none',\r\n\t\t},\r\n\t},\r\n\t//avatars\r\n\tsmallAvatar: {\r\n\t\twidth: theme.spacing(3),\r\n\t\theight: theme.spacing(3),\r\n\t},\r\n\torangeAvatar: {\r\n\t\tcolor: theme.palette.getContrastText(deepOrange[500]),\r\n\t\tbackgroundColor: deepOrange[500],\r\n\t},\r\n}));\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n\tbadge: {\r\n\t\tbackgroundColor: '#44b700',\r\n\t\tcolor: '#44b700',\r\n\t\tboxShadow: `0 0 0 2px #3f51b5`,\r\n\t\t'&::after': {\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: 0,\r\n\t\t\tleft: 0,\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\tborderRadius: '50%',\r\n\t\t\tanimation: '$ripple 1.2s infinite ease-in-out',\r\n\t\t\tborder: '1px solid currentColor',\r\n\t\t\tcontent: '\"\"',\r\n\t\t},\r\n\t},\r\n\t'@keyframes ripple': {\r\n\t\t'0%': {\r\n\t\t\ttransform: 'scale(.8)',\r\n\t\t\topacity: 1,\r\n\t\t},\r\n\t\t'100%': {\r\n\t\t\ttransform: 'scale(2.4)',\r\n\t\t\topacity: 0,\r\n\t\t},\r\n\t},\r\n}))(Badge);\r\n\r\nconst Header = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n\tconst isMenuOpen = Boolean(anchorEl);\r\n\tconst isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n\tconst handleProfileMenuOpen = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleMobileMenuClose = () => {\r\n\t\tsetMobileMoreAnchorEl(null);\r\n\t};\r\n\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t\thandleMobileMenuClose();\r\n\t};\r\n\r\n\tconst handleMobileMenuOpen = (event) => {\r\n\t\tsetMobileMoreAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\t//Выход из системы\r\n\tconst onLogout = () => {\r\n\t\tprops.logout();\r\n\t\t//return <Redirect to={\"/login\"} />\r\n\t}\r\n\r\n\tconst menuId = 'primary-search-account-menu';\r\n\tconst renderMenu = (\r\n\t\t<Menu\r\n\t\t\tanchorEl={anchorEl}\r\n\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n\t\t\tid={menuId}\r\n\t\t\tkeepMounted\r\n\t\t\ttransformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n\t\t\topen={isMenuOpen}\r\n\t\t\tonClose={handleMenuClose}\r\n\t\t>\r\n\t\t\t<MenuItem onClick={handleMenuClose}><a className={styles.noneHref}>Item 1</a></MenuItem>\r\n\t\t\t<MenuItem onClick={handleMenuClose}><a className={styles.noneHref}>Item 2</a></MenuItem>\r\n\t\t\t<MenuItem onClick={handleMenuClose}><a className={styles.noneHref}>Item 3</a></MenuItem>\r\n\t\t\t<MenuItem onClick={handleMenuClose}><a className={styles.noneHref}>Item 4</a></MenuItem>\r\n\t\t\t{/* <MenuItem onClick={handleMenuClose}><a href=\"http://localhost:3000/profile\" className={styles.noneHref}>Профиль</a></MenuItem>\r\n\t\t\t<MenuItem onClick={handleMenuClose}><a href=\"http://localhost:3000/settings\" className={styles.noneHref}>Настройки</a></MenuItem> */}\r\n\t\t\t{/* <MenuItem onClick={onLogout}><a href=\"\" className={styles.noneHref}>Выйти</a></MenuItem> */}\r\n\t\t</Menu>\r\n\t);\r\n\r\n\tconst mobileMenuId = 'primary-search-account-menu-mobile';\r\n\tconst renderMobileMenu = (\r\n\t\t<Menu\r\n\t\t\tanchorEl={mobileMoreAnchorEl}\r\n\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n\t\t\tid={mobileMenuId}\r\n\t\t\tkeepMounted\r\n\t\t\ttransformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n\t\t\topen={isMobileMenuOpen}\r\n\t\t\tonClose={handleMobileMenuClose}\r\n\t\t>\r\n\t\t\t<MenuItem>\r\n\t\t\t\t<IconButton aria-label=\"show 0 new mails\" color=\"inherit\">\r\n\t\t\t\t\t<Badge badgeContent={0} color=\"secondary\">\r\n\t\t\t\t\t\t<MailIcon />\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<p>Сообщения</p>\r\n\t\t\t</MenuItem>\r\n\t\t\t<MenuItem>\r\n\t\t\t\t<IconButton aria-label=\"show 0 new notifications\" color=\"inherit\">\r\n\t\t\t\t\t<Badge badgeContent={0} color=\"secondary\">\r\n\t\t\t\t\t\t<NotificationsIcon />\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<p>Уведомления</p>\r\n\t\t\t</MenuItem>\r\n\t\t\t<MenuItem onClick={handleProfileMenuOpen}>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\taria-label=\"account of current user\"\r\n\t\t\t\t\taria-controls=\"primary-search-account-menu\"\r\n\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<AccountCircle />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<p>Профиль</p>\r\n\t\t\t</MenuItem>\r\n\t\t</Menu>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={classes.grow + \" \" + styles.header}>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t{/* <IconButton\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton> */}\r\n\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" noWrap>\r\n\t\t\t\t\t\t<a href=\"http://localhost:3000/profile\" className={styles.logoText}>AntiVK</a>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<div className={classes.search}>\r\n\t\t\t\t\t\t<div className={classes.searchIcon}>\r\n\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\t\tplaceholder=\"Поиск...\"\r\n\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\troot: classes.inputRoot,\r\n\t\t\t\t\t\t\t\tinput: classes.inputInput,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className={classes.grow} />\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{props.isAuth\r\n\t\t\t\t\t\t\t? <div>\r\n\t\t\t\t\t\t\t\t<div className={classes.sectionDesktop}>\r\n\t\t\t\t\t\t\t\t\t<IconButton aria-label=\"show 2 new mails\" color=\"inherit\">\r\n\t\t\t\t\t\t\t\t\t\t<Badge badgeContent={0} color=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t<MailIcon />\r\n\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t<IconButton aria-label=\"show 1 new notifications\" color=\"inherit\">\r\n\t\t\t\t\t\t\t\t\t\t<Badge badgeContent={0} color=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t<NotificationsIcon />\r\n\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"account of current user\"\r\n\t\t\t\t\t\t\t\t\t\taria-controls={menuId}\r\n\t\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleProfileMenuOpen}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{props.profile &&\r\n\t\t\t\t\t\t\t\t\t\t\t<span className={styles.loginName}>{props.login}</span>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{!props.photo && <Avatar>VA</Avatar>}\r\n\t\t\t\t\t\t\t\t\t\t\t{props.photo &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledBadge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toverlap=\"circle\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"dot\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar alt=\"avatar\" src={props.photo} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledBadge>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t<IconButton color=\"default\" aria-label=\"upload picture\" component=\"span\" onClick={onLogout}>\r\n\t\t\t\t\t\t\t\t\t\t<ExitToAppIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.sectionMobile}>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"show more\"\r\n\t\t\t\t\t\t\t\t\t\taria-controls={mobileMenuId}\r\n\t\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleMobileMenuOpen}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MoreIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t: <Button variant=\"contained\" href=\"/login\">Авторизация</Button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t{renderMobileMenu}\r\n\t\t\t{renderMenu}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../../redux/authReducer';\r\nimport { getIsAuth, getLogin, getUserId, getPhoto } from './../../selectors/authSelectors';\r\nimport { getProfile } from './../../selectors/profileSelectors';\r\n\r\nconst HeaderContainer = (props) => {\r\n    return <Header {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    login: getLogin(state),\r\n    userId: getUserId(state),\r\n    profile: getProfile(state),\r\n    photo: getPhoto(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport RssFeedIcon from '@material-ui/icons/RssFeed';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst Navbar = (props) => {\r\n\treturn (\r\n\t\t<nav className={styles.nav}>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink to=\"/profile\" activeClassName={styles.activeLink}><HomeIcon fontSize=\"small\" />  Профиль</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink to=\"/dialogs\" activeClassName={styles.activeLink}><QuestionAnswerIcon fontSize=\"small\" />  Диалоги</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink to=\"/friends\" activeClassName={styles.activeLink}><PeopleIcon fontSize=\"small\" />  Друзья</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink to=\"/news\" activeClassName={styles.activeLink}><RssFeedIcon fontSize=\"small\" />  Лента</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink to=\"/music\" activeClassName={styles.activeLink}><LibraryMusicIcon fontSize=\"small\" />  Музыка</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink to=\"/users\" activeClassName={styles.activeLink}><PersonAddIcon fontSize=\"small\" />  Пользователи</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink to=\"/settings\" activeClassName={styles.activeLink}><SettingsIcon fontSize=\"small\" />  Настройки</NavLink>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styles from './Friend.module.css';\r\n\r\nconst Friend = (props) => {\r\n\treturn (\r\n\t\t<div className={styles.friend}>\r\n\t\t\t<img src={props.imgSrc} /> {props.name}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport styles from './NavbarFriends.module.css';\r\nimport Friend from './Friend/Friend';\r\n\r\nconst NavbarFriends = (props) => {\r\n\r\n\tlet friendsElement = props.friendsPage.map(f => <Friend name={f.name} key={f.id} id={f.id} imgSrc={f.imgSrc} />);\r\n\r\n\treturn (\r\n\t\t<div className={styles.navfriends}>\r\n\t\t\tFriends <span className={styles.quantityFriends}>{props.friendsPage.length}</span>\r\n\t\t\t<div className={styles.navfriendsGrid}>\r\n\t\t\t\t{friendsElement}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NavbarFriends;","import '../../redux/friendsReducer';\r\nimport NavbarFriends from './NavbarFriends';\r\nimport { connect } from 'react-redux';\r\nimport { getFriends } from './../../selectors/friendsSelectors';\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tfriendsPage: getFriends(state)\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavbarFriends);","import React from 'react';\r\nimport styles from './NavbarMusic.module.css';\r\n\r\n//{`${styles.item} ${styles.active}`}\r\n\r\nconst NavbarMusic = () => {\r\n\treturn (\r\n\t\t<div className={styles.NavbarMusic}>\r\n\t\t\tMusic\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Item 1</li>\r\n\t\t\t\t<li>Item 2</li>\r\n\t\t\t\t<li>Item 3</li>\r\n\t\t\t\t<li>Item 4</li>\r\n\t\t\t\t<li>Item 5</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NavbarMusic;","import React from 'react';\r\nimport styles from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className={styles.footer}>\r\n\t\t\t<div className={styles.logo}>AntiVK 2020</div>\r\n      </footer>\r\n\t)\r\n}\r\n\r\nexport default Footer;","import React, { useEffect, Suspense } from 'react';\r\nimport { initApp } from './redux/appReducer';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Route, withRouter, Switch, Redirect } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport NavbarFriendsContainer from './components/NavbarFriends/NavbarFriendsContainer';\r\nimport NavbarMusic from './components/NavbarMusic/NavbarMusic';\r\nimport Footer from './components/Footer/Footer';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst News = React.lazy(() => import('./components/News/News'));\r\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\r\nconst Music = React.lazy(() => import('./components/Music/Music'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst LoginContainer = React.lazy(() => import('./components/Login/LoginContainer'));\r\nconst FriendsContainer = React.lazy(() => import('./components/Friends/FriendsContainer'));\r\n\r\nconst App = (props) => {\r\n\tuseEffect(() => {\r\n\t\tprops.initApp();\r\n\t}, [props.initApp])\r\n\r\n\tif (!props.init) return <Preloader />\r\n\r\n\treturn (\r\n\t\t<div className=\"backColor\">\r\n\t\t\t<div className='app-wrapper'>\r\n\t\t\t\t<HeaderContainer />\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<NavbarFriendsContainer />\r\n\t\t\t\t<NavbarMusic />\r\n\t\t\t\t<div className=\"app-wrapper-content\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Suspense fallback={<Preloader />}>\r\n\t\t\t\t\t\t\t<Route exact path='/'><Redirect to='/profile' /></Route>\r\n\t\t\t\t\t\t\t<Route path='/dialogs' render={() => <DialogsContainer />} />\r\n\t\t\t\t\t\t\t<Route path='/profile/:userId?' render={() => <ProfileContainer />} />\r\n\t\t\t\t\t\t\t<Route path='/news' render={() => <News />} />\r\n\t\t\t\t\t\t\t<Route path='/music' render={() => <Music />} />\r\n\t\t\t\t\t\t\t<Route path='/friends' render={() => <FriendsContainer />} />\r\n\t\t\t\t\t\t\t<Route path='/users' render={() => <UsersContainer />} />\r\n\t\t\t\t\t\t\t<Route path='/settings' render={() => <Settings />} />\r\n\t\t\t\t\t\t\t<Route path='/login' render={() => <LoginContainer />} />\r\n\t\t\t\t\t\t\t{/* <Route path='*' render={() => <div><h1><b>404 NOT FOUND</b></h1></div>} /> */}\r\n\t\t\t\t\t\t\t{/* <Route exact path='/' render={() => <ProfileContainer />} />\r\n\t\t\t\t\t\t\t<Route exact path='/react' render={() => <ProfileContainer />} /> */}\r\n\t\t\t\t\t\t</Suspense>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tinit: state.app.init\r\n});\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, { initApp }))(App);","import './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/reduxStore';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2jH2N\",\"logoText\":\"Header_logoText__1OafQ\",\"loginName\":\"Header_loginName__1vq2H\",\"noneHref\":\"Header_noneHref__1kfeK\"};","import { authAPI, securityAPI } from './../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USERS_DATA = 'antiVK/auth/SET_USERS_DATA';\r\nconst GET_PHOTO = 'antiVK/auth/GET_PHOTO';\r\nconst GET_CAPTCHA_URL = 'antiVK/auth/GET_CAPTCHA_URL';\r\n\r\n//список пользователей соц сети и вся инфа о них. Берется из сервера\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    photo: null,\r\n    captchaUrl: null,\r\n    //rememberMe: false,\r\n    //isFetching: false\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS_DATA:\r\n        case GET_CAPTCHA_URL:\r\n        case GET_PHOTO:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        // case TOGGLE_IS_FETCHING: {\r\n        //     return { ...state, isFetching: action.isFetching }\r\n        // }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//actionCreators\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USERS_DATA, payload: { userId, email, login, isAuth } });\r\nexport const getPhotoSuccess = (photo) => ({ type: GET_PHOTO, payload: { photo } });\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({ type: GET_CAPTCHA_URL, payload: { captchaUrl } });\r\n//export const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\n\r\n//react-thunk\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.getMe();\r\n    if (response.data.resultCode === 0) { //если залогинены\r\n        let { id, email, login } = response.data.data;\r\n        const responsePhoto = await authAPI.getPhotoAuthUser(id);\r\n        dispatch(getPhotoSuccess(responsePhoto));\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const authUser = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === 0) { //если нет ошибок\r\n        dispatch(getAuthUserData()); //запрос логина с сервера\r\n    } else {\r\n        if (data.resultCode === 10) { //если нет ошибок\r\n            dispatch(getCaptchaUrl()); //запрос логина с сервера\r\n        }\r\n        const error_message = data.messages.length > 0 ? data.messages[0] : \"Произошла неведомая ошибка\";\r\n        dispatch(stopSubmit(\"login\", { _error: error_message })); //параметры: название формы, название ошибки\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl)); //запрос каптчи с сервера\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) { //если нет ошибок\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","//import { createSelector } from \"reselect\";\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport const getCaptchaUrl = (state) => {\r\n    if (state.auth) return state.auth.captchaUrl;\r\n}\r\n\r\nexport const getUserId = (state) => {\r\n    return state.auth.userId;\r\n}\r\n\r\nexport const getLogin = (state) => {\r\n    return state.auth.login;\r\n}\r\n\r\nexport const getPhoto = (state) => {\r\n    return state.auth.photo;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navfriends\":\"NavbarFriends_navfriends__3MXTc\",\"navfriendsGrid\":\"NavbarFriends_navfriendsGrid__TfcAE\",\"friend\":\"NavbarFriends_friend__1l5-P\",\"quantityFriends\":\"NavbarFriends_quantityFriends__28eag\"};","import React from 'react';\r\nimport preloader from '../../../assets/img/preloader.svg';\r\nimport styles from './Preloader.module.css';\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className={styles.preloader}>\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import avatarImage from './imgReducer';\r\n\r\n//список друзей и вся инфа о них. Берется из сервера...\r\nlet initialState = {\r\n    friends: [\r\n        { id: 1, imgSrc: avatarImage.getAvatarImage(0), name: 'Михаил', surname: 'Павлов', status: 'Я босс', location: { country: 'Россия', city: 'Муром' } },\r\n        { id: 2, imgSrc: avatarImage.getAvatarImage(3), name: 'Дмитрий', surname: 'Иванов', status: 'Волк воет, а собака лает', location: { country: 'Россия', city: 'Владимир' } },\r\n        { id: 3, imgSrc: avatarImage.getAvatarImage(1), name: 'Светлана', surname: 'Ясная', status: 'Я здесь король', location: { country: 'Россия', city: 'Муром' } },\r\n        { id: 4, imgSrc: avatarImage.getAvatarImage(1), name: 'Елена', surname: 'Гребникова', status: '', location: { country: 'Россия', city: 'Москва' } },\r\n        { id: 5, imgSrc: avatarImage.getAvatarImage(2), name: 'Женя', surname: 'Казанский', status: 'Не бойся перемен', location: { country: 'Россия', city: 'Муром' } },\r\n        { id: 6, imgSrc: avatarImage.getAvatarImage(4), name: 'Кирилл', surname: 'Эльман', status: '', location: { country: 'Украина', city: 'Киев' } },\r\n    ]\r\n};\r\n\r\nexport const friendsReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default friendsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__36Tjx\",\"logo\":\"Footer_logo__1djo0\"};","import { profileAPI } from \"../api/api\";\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst ADD_POST = 'antiVK/profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'antiVK/profile/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'antiVK/profile/SET_USER_STATUS';\r\nconst SET_LIKE_POST = 'antiVK/profile/SET_LIKE_POST';\r\nconst SET_DISLIKE_POST = 'antiVK/profile/SET_DISLIKE_POST';\r\nconst UNSET_LIKE_POST = 'antiVK/profile/UNSET_LIKE_POST';\r\nconst UNSET_DISLIKE_POST = 'antiVK/profile/UNSET_DISLIKE_POST';\r\nconst DEL_POST = 'antiVK/profile/DEL_POST';\r\nconst SET_USER_PHOTO_AVATAR = 'antiVK/profile/SET_USER_PHOTO_AVATAR';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hello World!', countLike: 20, countDislike: 6, userId: 7836, setLike: false, setDislike: false },\r\n        { id: 2, message: 'It\\'s my first post.', countLike: 12, countDislike: 56, userId: 7836, setLike: false, setDislike: false },\r\n        { id: 3, message: 'Test message', countLike: 50, countDislike: 0, userId: 7836, setLike: false, setDislike: false },\r\n        { id: 4, message: 'Test message 2', countLike: 0, countDislike: 1, userId: 7836, setLike: false, setDislike: false },\r\n    ],\r\n    profile: null,\r\n    status: null,\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            //глубокое копирование объекта\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, { id: (state.posts.length) + 1, message: action.newPostBody, countLike: 0, countDislike: 0, userId: 7836, setLike: false, setDislike: false }]\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_LIKE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => {\r\n                    if (p.id === action.postId && !p.setLike) {\r\n                        p.countLike++;\r\n                        p.setLike = true; //можно только раз поставить лайк\r\n                        return { ...p }\r\n                    }\r\n                    return state.posts;\r\n                })\r\n            };\r\n        }\r\n        case SET_DISLIKE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => {\r\n                    if (p.id === action.postId && !p.setDislike) {\r\n                        p.countDislike++;\r\n                        p.setDislike = true; //можно только раз поставить дизлайк\r\n                        return { ...p }\r\n                    }\r\n                    return state.posts;\r\n                })\r\n            };\r\n        }\r\n        case UNSET_LIKE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => {\r\n                    if (p.id === action.postId && p.setLike) {\r\n                        p.countLike--;\r\n                        p.setLike = false; //можно только раз снять лайк\r\n                        return { ...p }\r\n                    }\r\n                    return state.posts;\r\n                })\r\n            };\r\n        }\r\n        case UNSET_DISLIKE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => {\r\n                    if (p.id === action.postId && p.setDislike) {\r\n                        p.countDislike--;\r\n                        p.setDislike = false; //можно только раз снять дизлайк\r\n                        return { ...p }\r\n                    }\r\n                    return state.posts;\r\n                })\r\n            };\r\n        }\r\n        case DEL_POST: {\r\n            //глубокое копирование объекта\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            };\r\n        }\r\n        case SET_USER_PHOTO_AVATAR: {\r\n            //добавление аватарки профиля\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photos }\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostBody) => ({ type: ADD_POST, newPostBody })\r\nexport const deletePost = (postId) => ({ type: DEL_POST, postId })\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status })\r\nexport const setAvatarPhotoSuccess = (photos) => ({ type: SET_USER_PHOTO_AVATAR, photos })\r\n\r\nexport const setLikePost = (postId) => ({ type: SET_LIKE_POST, postId })\r\nexport const setDislikePost = (postId) => ({ type: SET_DISLIKE_POST, postId })\r\n\r\nexport const unsetLikePost = (postId) => ({ type: UNSET_LIKE_POST, postId })\r\nexport const unsetDislikePost = (postId) => ({ type: UNSET_DISLIKE_POST, postId })\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    //запрос с сервера профиля пользователя\r\n    const data = await profileAPI.getProfileUser(userId)\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    //запрос с сервера статуса пользователя\r\n    const data = await profileAPI.getStatusUser(userId)\r\n    dispatch(setUserStatus(data));\r\n}\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    //обновления статуса пользователя\r\n    try {\r\n        const response = await profileAPI.updateStatusUser(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status));\r\n        }\r\n    } catch (error) {\r\n        //обработка ошибки\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    //обновления статуса пользователя\r\n    const response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAvatarPhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    //обновления профиля пользователя\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId)); //обновление профиля, после выполнения запроса\r\n    } else {\r\n        dispatch(stopSubmit(\"updateContact\", { _error: response.data.messages[0] })); //параметры: название формы, название ошибки\r\n    }\r\n}\r\n\r\nexport default profileReducer;","//import { createSelector } from \"reselect\";\r\n\r\nexport const getProfile = (state) => {\r\n    return state.profilePage.profile;\r\n}\r\n\r\nexport const getAvatar = (state) => {\r\n    if (state.profilePage.profile) return state.profilePage.profile.photos.small;\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.status;\r\n}\r\n\r\nexport const getPosts = (state) => {\r\n    return state.profilePage.posts;\r\n}"],"sourceRoot":""}